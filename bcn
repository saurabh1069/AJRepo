# Load the Outlook COM object
Add-Type -AssemblyName 'Microsoft.Office.Interop.Outlook'
$Outlook = New-Object -ComObject Outlook.Application
$Namespace = $Outlook.GetNamespace('MAPI')

# Specify the folder paths for "Testing" and "Testing1"
$folderPathTesting = "Testing"
$folderPathTesting1 = "Testing1"

# Get the folders by path
$folderTesting = $Namespace.GetDefaultFolder('olFolderInbox').Folders.Item($folderPathTesting)
$folderTesting1 = $Namespace.GetDefaultFolder('olFolderInbox').Folders.Item($folderPathTesting1)

# Define time intervals for reminders
$firstReminderDays = 5
$secondReminderDays = 2
$thirdReminderDays = 2

# Get today's date
$today = Get-Date

# Hashtable to store the latest emails in "Testing" conversations
$latestEmails = @{}

# Process emails in "Testing1"
$emailsTesting1 = $folderTesting1.Items | Where-Object { $_.ReceivedTime -ge (Get-Date).AddDays(-7) }
$emailsTesting1 | ForEach-Object -Parallel {
    param ($email)

    if ($email.ConversationID) {
        $conversationID = $email.ConversationID
        $originalEmail = $latestEmails[$conversationID]

        if (-not $originalEmail) {
            # New conversation in "Testing1," store the current email as the latest
            $latestEmails[$conversationID] = $email
        } else {
            # Existing conversation, compare received times
            $originalReceivedDate = $originalEmail.ReceivedTime
            $timeSinceReceived = ($today - $originalReceivedDate).TotalDays

            if ($timeSinceReceived -ge $firstReminderDays) {
                # Check if the email in "Testing1" has not been replied to in "Testing"
                $correspondingEmailInTesting = $folderTesting.Items | Where-Object { $_.ConversationID -eq $conversationID }
                if (-not $correspondingEmailInTesting) {
                    Send-Reminder $originalEmail "Reminder 1"
                }
            } elseif ($timeSinceReceived -ge ($firstReminderDays + $secondReminderDays)) {
                $correspondingEmailInTesting = $folderTesting.Items | Where-Object { $_.ConversationID -eq $conversationID }
                if (-not $correspondingEmailInTesting) {
                    Send-Reminder $originalEmail "Reminder 2"
                }
            } elseif ($timeSinceReceived -ge ($firstReminderDays + $secondReminderDays + $thirdReminderDays)) {
                $correspondingEmailInTesting = $folderTesting.Items | Where-Object { $_.ConversationID -eq $conversationID }
                if (-not $correspondingEmailInTesting) {
                    Send-Reminder $originalEmail "Reminder 3"
                    Send-Final-Email $originalEmail
                }
            }
        }
    }
} -ThrottleLimit 5  # Adjust the ThrottleLimit based on the desired degree of parallelism

# Release COM objects
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($Outlook) | Out-Null
